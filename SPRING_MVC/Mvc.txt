Spring Web

Spring MVC:

=============

|-> 1.Dynamic application


|-> 2. Maven Approach






url-pattern can be used  :
==========================

1.character 
   /fb
   
   /login
   
   /register
   ......

2. /*
     |-> Here we send anything url patter like
      /save
      /update
      /delete
      /search


3. *.do
   *.htm
   *.genc

    /a.do
    /a.htm
    /a.genc




 spring mvc


  DispatchServlet->front controller
  /*
  
   *.spr

 struts application
  ActionServlet -> front controller
  /*

   *.st

Servlet:
=========

|-> When ever we start the server and if add load-on-startup
      |-> Interanlly  server will create following object
             
              |-> ServletContext object  -> Per project it create one ServletContext object
                                        

              |-> ServletConfig  object  -> Per Servlet it create one ServletConfig object
             

              |-> OurServlet  object




Where we have to configure the frontcontrollers:
================================================

|-> inside the  web.xml(dd)
	DispatchServlet



Where we need to configure the HelperClasses & Beans?

|-> inside the spring.xml file <-------



==================================================================================================

DispatchServlet:
=================
|-> It is act like a frontcontroller which  basically delegates the request to controller(BL)



Client want to send the request 
/greeting



SpringMVCWithSimpleURLHandlerMappingApplication:
=================================================
/message.do --> MessageController

/hello.ht   --> MyController

web.xml

<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  

  <servlet>
  	<servlet-name>dispatch</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	
  </servlet>
  <servlet-mapping>
  	<servlet-name>dispatch</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  
</web-app>


dispatch-servlet.xml

<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.3.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">


<!-- Configure the HandlerMapping Helper  Classes -->
<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>-->
<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	<property name="mappings">
			<props>
					<prop key="/message.do">messagecontroller</prop>
					<prop key="/hello.htm">mycontroller</prop>
			</props>
	
	</property>
</bean>

<!-- Configure the  Controllers -->
<bean id="messagecontroller" class="com.ums.controller.MessageController"/>
 <bean id="mycontroller" class="com.ums.controller.MyController"/>



<!-- Configure the  ViewResolver Helper  Classes -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
</bean>

</beans>

package com.ums.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.Controller;

public class MessageController implements Controller {

	@Override
	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
		ModelAndView mav = new ModelAndView("display");
		
		return mav;
	}

}

package com.ums.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.SimpleUrlHandlerMapping;
import org.springframework.web.servlet.mvc.Controller;

public class MyController implements Controller {

	@Override
	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
		ModelAndView mav = new ModelAndView("index");

		return mav;
	}

}

index.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<h1>Hello</h1>
</body>
</html>


display.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
	<h2>Welcome to  Dashboard</h2>
</body>
</html>

pom.xml:
=========
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.genc</groupId>
	<artifactId>UMSApplication</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>UMSApplication Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.1.1.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>
	<build>
		<finalName>UMSApplication</finalName>
	</build>
</project>
===================================================================================================



@Controller 

@RequestMapping


@Configuration

@ComponentScan

@Component

@Bean

@Pattern

@ModelAttribute

@RequestParam

@Valid

==================================================================================================



Changes:

1. Replacing dispatch-servlet.xml to SpringConfig.java

package com.ums.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

@Configuration
@ComponentScan(basePackages= {"com.ums.controllers"})
public class SpringConfig {
	
	@Bean
	public InternalResourceViewResolver internalResourceViewResolver() {
		InternalResourceViewResolver ir = new InternalResourceViewResolver();
		ir.setPrefix("/WEB-INF/views/");
		ir.setSuffix(".jsp");
		return ir;
	}
}

2. Replacing web.xml file with AbstractAnnonationConfigDispatcherServletInitializer :

package com.ums.config;

import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

public class MyWebConfig extends AbstractAnnotationConfigDispatcherServletInitializer {

	@Override
	protected Class<?>[] getRootConfigClasses() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected Class<?>[] getServletConfigClasses() {
		// TODO Auto-generated method stub
		return new Class[] {SpringConfig.class};
	}

	@Override
	protected String[] getServletMappings() {
		// TODO Auto-generated method stub
		return new String[] {"/"};
	}

}
====================================================================================================
package com.ums.controllers;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.usm.model.UserModel;

@Controller
public class GreetingMessageController {

	@RequestMapping("/hello")
	public String message() {
		
		return ("index");
	}
	
	
	@RequestMapping(value="/showform",method=RequestMethod.GET)
	public String getFormName() {
		
		return "userform";
	}
	
	/*
	@RequestMapping(value="/dataform",method=RequestMethod.POST)
	//public String saveData(HttpServletRequest request,HttpServletResponse response) {
	public String saveData(@ModelAttribute("umodel")UserModel umodel) {	
	
		System.out.println(umodel.toString());
		
		return "success";
	}*/
	
	
	@RequestMapping(value="/dataform",method=RequestMethod.POST)
	//public String saveData(HttpServletRequest request,HttpServletResponse response) {
	public ModelAndView saveData(@ModelAttribute("umodel")UserModel umodel) {	
	
		System.out.println(umodel.toString());
		
		return new ModelAndView("success", "um", umodel);
	}
	
	
}

